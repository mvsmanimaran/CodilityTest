//Triangle
	/**
	 * A[P] + A[Q] > A[R],
	   A[Q] + A[R] > A[P],
	   A[R] + A[P] > A[Q]
	 */
	public int triangleSolution(int[] A) {
		int status = 0;
		for(int i=0; i<A.length; i++) {
			int[] B = removeTheElement(A, i);
			for(int j=0; j<B.length; j++) {
				int[] C = removeTheElement(B, j);
				for(int k=0; k<C.length; k++) {
					if((A[i] + B[j] > C[k]) &&
					   (B[j] + C[k] > A[i]) &&
					   (C[k] + A[i] > B[j])) {
						return 1;
					}
				}
			}
		}
		return status;
	}
	
	// Function to remove the element 
    public int[] removeTheElement(int[] arr, int index) 
    { 
    	// Create another array of size one less 
        int[] anotherArray = new int[arr.length - 1]; 
  
        // Copy the elements except the index 
        // from original array to the other array 
        for (int i = 0, k = 0; i < arr.length; i++) { 
  
            // if the index is 
            // the removal element index 
            if (i == index) { 
                continue; 
            } 
  
            // if the index is not 
            // the removal element index 
            anotherArray[k++] = arr[i]; 
        } 
        
        //Java >8
        //IntStream.range(0, arr.length).filter(i -> i != index).map(i -> arr[i]).toArray();
        
        return anotherArray;
    }



//int[] f = {10,2,5,1,8,20};
int[] f = {10,50,5,1};
System.out.println("Triangle : "+obj.triangleSolution(f));
